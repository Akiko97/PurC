/*
** This file is part of DOM Ruler. DOM Ruler is a library to
** maintain a DOM tree, lay out and stylize the DOM nodes by
** using CSS (Cascaded Style Sheets).
**
** Copyright (C) 2021~2022 Beijing FMSoft Technologies Co., Ltd.
**
** This program is free software: you can redistribute it and/or modify
** it under the terms of the GNU Lesser General License as published by
** the Free Software Foundation, either version 3 of the License, or
** (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU Lesser General License for more details.
**
** You should have received a copy of the GNU Lesser General License
** along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _DOMRULER_VERSION_H_
#define _DOMRULER_VERSION_H_

/**
 * DOMRULER_VERSION_MAJOR:
 *
 * Like domruler_get_major_version(), but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 *
 * Since 0.0.1
 */
#define DOMRULER_VERSION_MAJOR @PROJECT_VERSION_MAJOR@

/**
 * DOMRULER_VERSION_MINOR:
 *
 * Like domruler_get_minor_version(), but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 *
 * Since 0.0.1
 */
#define DOMRULER_VERSION_MINOR @PROJECT_VERSION_MINOR@

/**
 * DOMRULER_VERSION_MICRO:
 *
 * Like domruler_get_micro_version(), but from the headers used at
 * application compile time, rather than from the library linked
 * against at application run time.
 *
 * Since 0.0.1
 */
#define DOMRULER_VERSION_MICRO @PROJECT_VERSION_MICRO@

#define DOMRULER_VERSION_STRING "@PROJECT_VERSION@"

#define DOMRULER_API_VERSION_STRING "@DOMRULER_API_VERSION@"

/**
 * DOMRULER_CHECK_VERSION:
 *
 * @major: major version (e.g. 1 for version 1.2.5)
 * @minor: minor version (e.g. 2 for version 1.2.5)
 * @micro: micro version (e.g. 5 for version 1.2.5)
 *
 * Returns: %TRUE if the version of the PurC header files
 * is the same as or newer than the passed-in version.
 *
 * Since 0.0.1
 */
#define DOMRULER_CHECK_VERSION(major, minor, micro) \
    (DOMRULER_VERSION_MAJOR > (major) || \
    (DOMRULER_VERSION_MAJOR == (major) && DOMRULER_VERSION_MINOR > (minor)) || \
    (DOMRULER_VERSION_MAJOR == (major) && DOMRULER_VERSION_MINOR == (minor) && \
     DOMRULER_VERSION_MICRO >= (micro)))

/**
 * domruler_get_major_version:
 *
 * Returns: The major version of PurC.
 *
 * Since 0.0.1
 */
static inline int
domruler_get_major_version(void)
{
    return DOMRULER_VERSION_MAJOR;
}

/**
 * domruler_get_minor_version:
 *
 * Returns: The minor version of PurC.
 *
 * Since 0.0.1
 */
static inline int
domruler_get_minor_version(void)
{
    return DOMRULER_VERSION_MINOR;
}

/**
 * domruler_get_micro_version:
 *
 * Returns: The micro version of PurC.
 *
 * Since 0.0.1
 */
static inline int
domruler_get_micro_version(void)
{
    return DOMRULER_VERSION_MICRO;
}

/**
 * domruler_get_versions:
 *
 * @major: the buffer for major version (nullable).
 * @minor: the buffer for minor version (nullable).
 * @micro: the buffer for micro version (nullable).
 *
 * Returns: none.
 *
 * Since 0.0.1
 */
static inline void
domruler_get_versions (int *major, int *minor, int *micro) {
    if (major) *major = DOMRULER_VERSION_MAJOR;
    if (minor) *minor = DOMRULER_VERSION_MINOR;
    if (micro) *micro = DOMRULER_VERSION_MICRO;
}

/**
 * domruler_version_string:
 *
 * Returns: the pointer to the PurC version string (e.g. "1.2.3" for version 1.2.3).
 *
 * Since 0.0.1
 */
static inline const char *
domruler_get_version_string (void) {
    return DOMRULER_VERSION_STRING;
}

/**
 * domruler_api_version_string:
 *
 * Returns: the pointer to the PurC API version string (e.g. "1.2" for version 1.2).
 *
 * Since 0.0.1
 */
static inline const char *
domruler_get_api_version_string (void) {
    return DOMRULER_API_VERSION_STRING;
}

#endif /* not defined _DOMRULER_VERSION_H_ */

