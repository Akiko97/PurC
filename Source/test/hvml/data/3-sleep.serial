PCHVML_TOKEN_COMMENT|<!-- The expected output of this HVML program should be like

Current time: 00:00
Current time: 00:03
Current time: 00:01
Current time: 00:02
Current time: 00:07
Current time: 00:04
Current time: 00:08
Current time: 00:05
Current time: 00:03
Current time: 00:00

I slept for 50 seconds totally
-->
PCHVML_TOKEN_VCM_TREE|"

"
PCHVML_TOKEN_DOCTYPE|<!DOCTYPE hvml>
PCHVML_TOKEN_VCM_TREE|"
"
PCHVML_TOKEN_START_TAG|<hvml target="void">
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_START_TAG|<init as="startTime" with=get_element(get_variable("SYS"),"time")/>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_START_TAG|<iterate on=0 onlyif=call_getter(get_element(get_variable("L"),"lt"),get_variable("0<"),10) with=call_getter(get_element(get_variable("EJSON"),"arith_calc"),"+",get_variable("0<"),1) nosetotail>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<sleep with=call_getter(get_element(get_variable("SYS"),"random"),10)>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_VCM_TREE|call_getter(get_element(get_element(get_variable("STREAM"),"stdout"),"writelines"),call_getter(get_element(get_variable("STR"),"join"),"Current time: ",call_getter(get_element(get_variable("SYS"),"time"),"%H:%m")))
PCHVML_TOKEN_END_TAG|</sleep>
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_END_TAG|</iterate>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_VCM_TREE|{{ call_getter(get_element(get_element(get_variable("STREAM"),"stdout"),"writelines"),call_getter(get_element(get_variable("STR"),"join"),"I slept for ",call_getter(get_element(get_variable("EJSON"),"arith_calc"),"-",get_element(get_variable("SYS"),"time"),get_variable("startTime"))," seconds totally")) ; call_getter(get_element(get_variable("L"),"lt"),call_getter(get_element(get_variable("EJSON"),"arith_calc"),"-",get_element(get_variable("SYS"),"time"),get_variable("startTime")),0) }}
PCHVML_TOKEN_END_TAG|</hvml>
