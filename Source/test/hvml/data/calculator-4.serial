PCHVML_TOKEN_DOCTYPE|<!DOCTYPE hvml SYSTEM "v: MATH">
PCHVML_TOKEN_VCM_TREE|"
"
PCHVML_TOKEN_START_TAG|<hvml target="html" lang="en">
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_START_TAG|<head>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<base href=call_setter(get_element(getVariable("CRTN"),"base"),"https://gitlab.fmsoft.cn/hvml/hvml-docs/raw/master/samples/calculator/")/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<update on=get_element(getVariable("T"),"map") from=concat_string("assets/",get_element(getVariable("SYS"),"locale"),".json") to="merge"/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="buttons" from="assets/buttons.json"/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="expressions" from="assets/expressions.json"/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<title>
PCHVML_TOKEN_VCM_TREE|call_getter(get_element(getVariable("T"),"get"),"HVML Calculator")
PCHVML_TOKEN_END_TAG|</title>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<update on=getVariable("TIMERS") to="unite">
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_VCM_TREE|make_array(make_object("id","clock","interval",1000,"active","yes"),make_object("id","input","interval",1500,"active","yes"))
PCHVML_TOKEN_END_TAG|</update>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<link rel="stylesheet" type="text/css" href="assets/calculator.css"/>
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_END_TAG|</head>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_START_TAG|<body>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<init as="exp_chars" with=make_array()/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<iterate on=getVariable("expressions") by="RANGE: FROM 0">
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<update on=getVariable("exp_chars") to="append" with=make_array()/>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<iterate on=getVariable("?") by="CHAR: FROM 0">
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<update on=getVariable("exp_chars") at=getVariable("1%") to="append" with=getVariable("?")/>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</iterate>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</iterate>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="info">
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_VCM_TREE|make_object("chars",get_element(getVariable("exp_chars"),call_getter(get_element(getVariable("SYS"),"random"),call_getter(get_element(getVariable("EJSON"),"count"),getVariable("exp_chars")))),"index",0)
PCHVML_TOKEN_END_TAG|</init>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<div id="calculator">
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<div id="c_title">
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<h2 id="c_title">
PCHVML_TOKEN_VCM_TREE|call_getter(get_element(getVariable("T"),"get"),"HVML Calculator")
PCHVML_TOKEN_START_TAG|<small>
PCHVML_TOKEN_VCM_TREE|call_getter(get_element(getVariable("T"),"get"),"Current Time: ")
PCHVML_TOKEN_START_TAG|<span id="clock">
PCHVML_TOKEN_VCM_TREE|call_getter(get_element(getVariable("SYS"),"time"),"%H:%M:%S")
PCHVML_TOKEN_END_TAG|</span>
PCHVML_TOKEN_END_TAG|</small>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</h2>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<observe on=getVariable("TIMERS") for="expired:clock">
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_START_TAG|<update on="#clock" at="textContent" with=call_getter(get_element(getVariable("SYS"),"time"),"%H:%M:%S")/>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</observe>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</div>
PCHVML_TOKEN_VCM_TREE|"

            "
PCHVML_TOKEN_START_TAG|<div id="c_text">
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<input type="text" id="expression" value=0 readonly="readonly"/>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<observe on=getVariable("TIMERS") for="expired:input">
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_START_TAG|<test on=get_element(get_element(getVariable("info"),"chars"),get_element(getVariable("info"),"index"))>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_START_TAG|<update on=getVariable("info") at=".index" with=call_getter(get_element(getVariable("MATH"),"add"),get_element(getVariable("info"),"index"),1)/>
PCHVML_TOKEN_VCM_TREE|"

                        "
PCHVML_TOKEN_START_TAG|<match for="AS '='" exclusively>
PCHVML_TOKEN_VCM_TREE|"
                            "
PCHVML_TOKEN_START_TAG|<choose on=call_getter(get_element(getVariable("MATH"),"eval"),call_getter(get_element(call_getter(get_element(getVariable("DOC"),"query"),"#expression"),"attr"),"value"))>
PCHVML_TOKEN_VCM_TREE|"
                                "
PCHVML_TOKEN_START_TAG|<update on="#expression" at="attr.value" with=getVariable("?")/>
PCHVML_TOKEN_VCM_TREE|"
                                "
PCHVML_TOKEN_START_TAG|<update on=getVariable("TIMERS") to="overwrite">
PCHVML_TOKEN_VCM_TREE|"
                                    "
PCHVML_TOKEN_VCM_TREE|make_object("id","input","active","no")
PCHVML_TOKEN_END_TAG|</update>
PCHVML_TOKEN_VCM_TREE|"
                                "
PCHVML_TOKEN_START_TAG|<catch for="*">
PCHVML_TOKEN_VCM_TREE|"
                                    "
PCHVML_TOKEN_START_TAG|<update on="#expression" at="attr.value" with="ERR"/>
PCHVML_TOKEN_VCM_TREE|"
                                "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"
                            "
PCHVML_TOKEN_END_TAG|</choose>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_END_TAG|</match>
PCHVML_TOKEN_VCM_TREE|"

                        "
PCHVML_TOKEN_START_TAG|<match for="AS 'C'" exclusively>
PCHVML_TOKEN_VCM_TREE|"
                            "
PCHVML_TOKEN_START_TAG|<update on="#expression" at="attr.value" with=""/>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_END_TAG|</match>
PCHVML_TOKEN_VCM_TREE|"

                        "
PCHVML_TOKEN_START_TAG|<match for="AS '←'" exclusively>
PCHVML_TOKEN_VCM_TREE|"
                            "
PCHVML_TOKEN_START_TAG|<choose on=get_element(get_element(call_getter(get_element(getVariable("DOC"),"query"),"#expression"),"attr"),"value")>
PCHVML_TOKEN_VCM_TREE|"
                                "
PCHVML_TOKEN_START_TAG|<update on="#expression" at="attr.value" with=call_getter(get_element(getVariable("STR"),"substr"),getVariable("?"),0,-1)/>
PCHVML_TOKEN_VCM_TREE|"
                            "
PCHVML_TOKEN_END_TAG|</choose>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_END_TAG|</match>
PCHVML_TOKEN_VCM_TREE|"

                        "
PCHVML_TOKEN_START_TAG|<match>
PCHVML_TOKEN_VCM_TREE|"
                            "
PCHVML_TOKEN_START_TAG|<update on="#expression" at="attr.value" with$=getVariable("?")/>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_END_TAG|</match>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_END_TAG|</test>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</observe>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</div>
PCHVML_TOKEN_VCM_TREE|"

            "
PCHVML_TOKEN_START_TAG|<div id="c_value">
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<archetype name="button">
PCHVML_TOKEN_VCM_TREE|concat_string("<li class="",get_element(getVariable("?"),"class"),""",">",get_element(getVariable("?"),"letters"),"</li>
                ")
PCHVML_TOKEN_END_TAG|</archetype>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<ul>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_START_TAG|<iterate on=getVariable("buttons")>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_START_TAG|<update on=getVariable("@") to="append" with=getVariable("button")/>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_START_TAG|<except type="NoData" raw>
PCHVML_TOKEN_VCM_TREE|"<p>Bad data!</p>
                        "
PCHVML_TOKEN_END_TAG|</except>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_END_TAG|</iterate>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</ul>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</div>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</div>
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_END_TAG|</body>
PCHVML_TOKEN_VCM_TREE|"

"
PCHVML_TOKEN_END_TAG|</hvml>
